package br.com.restaurante.faces;import java.util.ArrayList;import java.util.List;import javax.annotation.PostConstruct;import javax.ejb.EJB;import javax.faces.bean.ManagedBean;import javax.faces.bean.ViewScoped;import javax.faces.model.SelectItem;import br.com.restaurante.business.ComboBS;import br.com.restaurante.business.CrudBS;import br.com.restaurante.business.SetorBS;import br.com.restaurante.model.CentroResultadoModel;import br.com.restaurante.model.OrigemModel;import br.com.restaurante.model.SetorModel;import br.com.restaurante.model.SetorOrigemModel;import br.com.restaurante.util.Constantes;import br.com.restaurante.util.Utilitario;import br.com.topsys.exception.TSApplicationException;import br.com.topsys.util.TSUtil;@ViewScoped@SuppressWarnings("serial")@ManagedBean(name = "setorFaces")public final class SetorFaces extends CrudFaces<SetorModel> {	@EJB	private SetorBS setorBS;	@EJB	private ComboBS comboBS;	private OrigemModel origemModel;	private SetorOrigemModel setorOrigemModel;	private List<SelectItem> comboSetor;	private List<SelectItem> comboOrigens;	private List<SelectItem> comboCentroResultado;	@Override	@PostConstruct	protected void clearFields() {		this.crudModel = new SetorModel();		this.crudModel.setSetorModel(new SetorModel());		this.crudModel.setCentroResultadoModel(new CentroResultadoModel());		this.crudModel.setOrigens(new ArrayList<SetorOrigemModel>());		this.crudModel.setFlagAtivo(Boolean.TRUE);		this.crudPesquisaModel = new SetorModel();		this.crudPesquisaModel.setSetorModel(new SetorModel());		this.crudPesquisaModel.setCentroResultadoModel(new CentroResultadoModel());		this.crudPesquisaModel.setFlagAtivo(Boolean.TRUE);		this.comboSetor = super.initCombo(this.comboBS.pesquisarSetores(Utilitario.getOrigemAtual()), "id", "descricao");		this.comboOrigens = super.initCombo(this.comboBS.pesquisarOrigens(), "id", "descricao");		this.comboCentroResultado = super.initCombo(this.comboBS.pesquisarCentroResultado(), "id", "descricao");		this.alterar = false;				this.origemModel = new OrigemModel();	}	public String addOrigem() {		if (TSUtil.isEmpty(this.origemModel.getId())) {			super.addErrorMessage("Selecione a origem");			return null;		}		SetorOrigemModel model = new SetorOrigemModel();		model.setSetorModel(this.crudModel);		model.setOrigemModel(this.comboBS.obter(this.origemModel));		if (this.crudModel.getOrigens().contains(model)) {			super.addErrorMessage("Origem j√° adicionada anteriormente");			return null;		}		this.crudModel.getOrigens().add(model);		return null;	}		public String delOrigem() {		try {			this.setorBS.excluir(this.setorOrigemModel);			this.crudModel.getOrigens().remove(this.setorOrigemModel);						super.addInfoMessageKey(Constantes.OPERACAO_SUCESSO);		} catch (TSApplicationException e) {			super.throwException(e);		}		return null;	}		@Override	protected void tratarClone() {				for(SetorOrigemModel origem : this.crudModel.getOrigens()){						origem.setId(null);			origem.setSetorModel(this.crudModel);					}			}		@Override	protected CrudBS<SetorModel> getCrudBS() {		return setorBS;	}	public List<SelectItem> getComboOrigens() {		return comboOrigens;	}	public void setComboOrigens(List<SelectItem> comboOrigens) {		this.comboOrigens = comboOrigens;	}	public OrigemModel getOrigemModel() {		return origemModel;	}	public void setOrigemModel(OrigemModel origemModel) {		this.origemModel = origemModel;	}	public List<SelectItem> getComboCentroResultado() {		return comboCentroResultado;	}	public void setComboCentroResultado(List<SelectItem> comboCentroResultado) {		this.comboCentroResultado = comboCentroResultado;	}	public SetorOrigemModel getSetorOrigemModel() {		return setorOrigemModel;	}	public void setSetorOrigemModel(SetorOrigemModel setorOrigemModel) {		this.setorOrigemModel = setorOrigemModel;	}	public List<SelectItem> getComboSetor() {		return comboSetor;	}	public void setComboSetor(List<SelectItem> comboSetor) {		this.comboSetor = comboSetor;	}}